user nobody nobody;
worker_processes 2;
worker_rlimit_nofile 8000;

events {
	worker_connections  8192;
}

http {
	perl_modules  /opt/local/share/nginx;
    perl_require  Roboo.pm;
    include     /opt/local/etc/nginx/mime.types;
	default_type	application/octet-stream;

	log_format main
		'$remote_addr - $remote_user [$time_local] '
        	'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';
									       
	client_header_timeout	10m;
	client_body_timeout     10m;
	send_timeout            10m;

	connection_pool_size		256;
	client_header_buffer_size	1k;
    client_body_buffer_size     16k;
	large_client_header_buffers	4 16k;
	request_pool_size		    4k;

	gzip                off;
	gzip_min_length 	1;
	gzip_buffers	    4 8k;
	gzip_types	        text/plain application/x-shockwave-flash text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied        any;
	output_buffers	    1 32k;
	postpone_output	    1460;

	sendfile	on;
	tcp_nopush	on;
	tcp_nodelay	on;

	keepalive_timeout	75 20;

	ignore_invalid_headers	on;

    server_tokens off;
    proxy_cache_path    /opt/local/share/nginx/cache    levels=1:2  keys_zone=cache:10m inactive=10m max_size=1000m;

	server {
		listen		80;
		server_name	_;
		
        location / {
            perl Roboo::handler;
            set $Roboo_challengetype   "JS,SWF,gzip";
            set $Roboo_cookiename       "Anti-Robot";
            set $Roboo_validitytime     30;

            expires epoch;
	    	add_header Last-Modified "";
            if ($Roboo_challengetype ~ gzip) {
                gzip on;
            }
        }

        location /proxy {
            internal;
            proxy_pass          http://www.radware.com;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header    Host    $host;
            proxy_cache         cache;
            proxy_cache_valid   5m;
            gzip                on;
        }
	}


##ssl portion
	# server {
	# 	listen		127.0.0.1:443;
	# 	server_name	localhost;
	# 	
	# 	ssl on;
	# 	ssl_certificate		/etc/ssl/nginx/nginx.pem;
	# 	ssl_certificate_key	/etc/ssl/nginx/nginx.key;
	# 	
	# 	access_log	/var/log/nginx/localhost.ssl_access_log main;
	# 	error_log	/var/log/nginx/localhost.ssl_error_log info;
	# 
	# 	root /var/www/localhost/htdocs;
	# }
}
